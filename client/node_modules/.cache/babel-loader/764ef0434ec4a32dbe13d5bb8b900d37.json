{"ast":null,"code":"export var testAudioWorkletNodeOptionsClonability = function testAudioWorkletNodeOptionsClonability(audioWorkletNodeOptions) {\n  var _MessageChannel = new MessageChannel(),\n      port1 = _MessageChannel.port1,\n      port2 = _MessageChannel.port2;\n\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n    port2.close();\n  }\n};","map":{"version":3,"sources":["../../../src/helpers/test-audio-worklet-node-options-clonability.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,sCAAsC,GAAoD,SAA1F,sCAA0F,CAAC,uBAAD,EAA4B;AAC/H,wBAAyB,IAAI,cAAJ,EAAzB;AAAA,MAAQ,KAAR,mBAAQ,KAAR;AAAA,MAAe,KAAf,mBAAe,KAAf;;AAEA,MAAI;AACA;AACA,IAAA,KAAK,CAAC,WAAN,CAAkB,uBAAlB;AACH,GAHD,SAGU;AACN,IAAA,KAAK,CAAC,KAAN;AACA,IAAA,KAAK,CAAC,KAAN;AACH;AACJ,CAVM","sourceRoot":"","sourcesContent":["export const testAudioWorkletNodeOptionsClonability = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n        port2.close();\n    }\n};\n//# sourceMappingURL=test-audio-worklet-node-options-clonability.js.map"]},"metadata":{},"sourceType":"module"}