{"ast":null,"code":"var _jsxFileName = \"/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/SideNav.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n// 3rd party library imports\nimport classNames from 'classnames';\nimport { fromJS, List } from 'immutable';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Music20, RadioButton20, RadioButtonChecked20 } from '@carbon/icons-react'; // project imports\n\nimport { DispatchAction } from './Reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = ({\n  title,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-column bb b--light-gray pa3 customHeight\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fw7 mb2\",\n      children: [title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto overflow-scroll\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Section;\n\nfunction RadioButton({\n  to,\n  text,\n  active,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: to,\n    className: \"no-underline\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames('f6 flex items-center black', {\n        fw7: active\n      }),\n      onClick: onClick,\n      children: [active ? /*#__PURE__*/_jsxDEV(RadioButtonChecked20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(RadioButton20, {\n        className: \"mr1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dim\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = RadioButton;\n\nfunction Instruments({\n  state\n}) {\n  _s();\n\n  var _state$get;\n\n  const instruments = state.get('instruments');\n  const activeInstrument = (_state$get = state.get('instrument')) === null || _state$get === void 0 ? void 0 : _state$get.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Instruments\",\n    children: instruments.map(i => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: `/${i.name}${location.search}`,\n      text: i.name,\n      active: i.name === activeInstrument,\n      onClick: () => console.log(i.name)\n    }, i.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Instruments, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c3 = Instruments;\n\nfunction Visualizers({\n  state\n}) {\n  _s2();\n\n  var _state$get2;\n\n  const visualizers = state.get('visualizers');\n  const activeVisualizer = (_state$get2 = state.get('visualizer')) === null || _state$get2 === void 0 ? void 0 : _state$get2.name;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Visualizers\",\n    children: visualizers.map(v => /*#__PURE__*/_jsxDEV(RadioButton, {\n      to: {\n        pathname: location.pathname,\n        search: `?visualizer=${v.name}`\n      },\n      text: v.name,\n      active: v.name === activeVisualizer,\n      onClick: () => console.log(v.name)\n    }, v.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Visualizers, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c4 = Visualizers;\n\nfunction Songs({\n  state,\n  dispatch\n}) {\n  _s3();\n\n  const [songs, setSongs] = useState(List()); // Songs are stored in the component state\n\n  useEffect(() => {\n    const songsList = state.get('songs', List());\n\n    if (songsList.size > 0) {\n      setSongs(songsList); // Adds the songs from the application state\n    }\n  }, [state]); // This method is used within the filter component\n\n  const handleInputChange = event => {\n    var _inputElement$value;\n\n    const inputElement = event.target;\n    const inputValue = (_inputElement$value = inputElement.value) !== null && _inputElement$value !== void 0 ? _inputElement$value : \"\";\n    const filteredSongs = inputValue ? songs.filter(song => {\n      return song.get('songTitle').toUpperCase().startsWith(inputValue.toUpperCase());\n    }) : state.get('songs', List());\n\n    if (filteredSongs) {\n      setSongs(filteredSongs); // Filtered songs are set to this components state\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SongFilter, {\n      onChangeHandler: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Playlist\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f6 pointer underline flex items-center no-underline i dim\",\n        onClick: () => dispatch(new DispatchAction('PLAY_SONG', {\n          id: song.get('id')\n        })),\n        children: [/*#__PURE__*/_jsxDEV(Music20, {\n          className: \"mr1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), song.get('songTitle')]\n      }, song.get('id'), true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n/*\n* This component displays song filter\n* */\n\n\n_s3(Songs, \"aT7RBSiNjoo3za6y6RCMkYQIfNg=\");\n\n_c5 = Songs;\n\nfunction SongFilter(props) {\n  const onChangeHandler = props.onChangeHandler;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pa2 b--light-gray mb1 mr3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"fw7 mb2\",\n      children: \"Search songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      maxLength: 50,\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n/*\n* This component displays details of the currently playing song\n* */\n\n\n_c6 = SongFilter;\n\nfunction SongDetails({\n  state\n}) {\n  var _song$artist, _song$album, _song$genre;\n\n  let song = state.get('playingSong', fromJS({})).toJSON();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: song.songTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songDetails overflow-scroll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"fw7 mb2\",\n        children: song.songTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songDetails__element\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Artist :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"songDetails__element-detail\",\n          children: (_song$artist = song.artist) !== null && _song$artist !== void 0 ? _song$artist : 'Not Available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songDetails__element\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Album : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"songDetails__element-detail\",\n          children: (_song$album = song.album) !== null && _song$album !== void 0 ? _song$album : 'Not Available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songDetails__element\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Genre : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"songDetails__element-detail\",\n          children: (_song$genre = song.genre) !== null && _song$genre !== void 0 ? _song$genre : 'Not Available'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}\n\n_c7 = SongDetails;\nexport function SideNav({\n  state,\n  dispatch\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h3 fw7 f5 flex items-center pl3 bb b--light-gray\",\n      children: \"Temp Instrument\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-auto\",\n      children: [/*#__PURE__*/_jsxDEV(Instruments, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Visualizers, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Songs, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SongDetails, {\n        state: state,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n}\n_c8 = SideNav;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"RadioButton\");\n$RefreshReg$(_c3, \"Instruments\");\n$RefreshReg$(_c4, \"Visualizers\");\n$RefreshReg$(_c5, \"Songs\");\n$RefreshReg$(_c6, \"SongFilter\");\n$RefreshReg$(_c7, \"SongDetails\");\n$RefreshReg$(_c8, \"SideNav\");","map":{"version":3,"sources":["/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/SideNav.tsx"],"names":["classNames","fromJS","List","React","Fragment","useEffect","useState","Link","useLocation","Music20","RadioButton20","RadioButtonChecked20","DispatchAction","Section","title","children","RadioButton","to","text","active","onClick","fw7","Instruments","state","instruments","get","activeInstrument","name","location","map","i","search","console","log","Visualizers","visualizers","activeVisualizer","v","pathname","Songs","dispatch","songs","setSongs","songsList","size","handleInputChange","event","inputElement","target","inputValue","value","filteredSongs","filter","song","toUpperCase","startsWith","id","SongFilter","props","onChangeHandler","SongDetails","toJSON","songTitle","artist","album","genre","SideNav"],"mappings":"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","sourcesContent":["// 3rd party library imports\nimport classNames from 'classnames';\nimport {fromJS, List} from 'immutable';\nimport React, {Fragment, useEffect, useState} from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport {Music20, RadioButton20, RadioButtonChecked20,} from '@carbon/icons-react';\n\n// project imports\nimport {DispatchAction} from './Reducer';\nimport {AppState} from './State';\nimport {Instrument} from './Instruments';\nimport {Visualizer} from './Visualizers';\n\n/** ------------------------------------------------------------------------ **\n * All the components in the side navigation.\n ** ------------------------------------------------------------------------ */\n\ninterface SideNavProps {\n    state: AppState;\n    dispatch: React.Dispatch<DispatchAction>;\n}\n\nconst Section: React.FC<{ title: string }> = ({title, children}) => {\n    return (\n        <div className=\"flex flex-column bb b--light-gray pa3 customHeight\">\n            <div className=\"fw7 mb2\">{title} </div>\n            <div className=\"flex-auto overflow-scroll\">{children}</div>\n        </div>\n    );\n};\n\ninterface RadioButtonProps {\n    to: any,\n    text: string,\n    active: boolean,\n    onClick: () => void\n}\n\nfunction RadioButton({to, text, active, onClick}: RadioButtonProps): JSX.Element {\n    return (\n        <Link to={to} className=\"no-underline\">\n            <div\n                className={classNames('f6 flex items-center black', {fw7: active})}\n                onClick={onClick}\n            >\n                {active ? (\n                    <RadioButtonChecked20 className=\"mr1\"/>\n                ) : (\n                    <RadioButton20 className=\"mr1\"/>\n                )}\n                <div className=\"dim\">{text}</div>\n            </div>\n        </Link>\n    );\n}\n\nfunction Instruments({state}: SideNavProps): JSX.Element {\n    const instruments: List<Instrument> = state.get('instruments');\n    const activeInstrument = state.get('instrument')?.name;\n    const location = useLocation();\n\n    return (\n        <Section title=\"Instruments\">\n            {instruments.map(i => (\n                <RadioButton\n                    key={i.name}\n                    to={`/${i.name}${location.search}`}\n                    text={i.name}\n                    active={i.name === activeInstrument}\n                    onClick={() => console.log(i.name)}\n                />\n            ))}\n        </Section>\n    );\n}\n\nfunction Visualizers({state}: SideNavProps): JSX.Element {\n    const visualizers: List<Visualizer> = state.get('visualizers');\n    const activeVisualizer = state.get('visualizer')?.name;\n    const location = useLocation();\n\n    return (\n        <Section title=\"Visualizers\">\n            {visualizers.map(v => (\n                <RadioButton\n                    key={v.name}\n                    to={{\n                        pathname: location.pathname,\n                        search: `?visualizer=${v.name}`,\n                    }}\n                    text={v.name}\n                    active={v.name === activeVisualizer}\n                    onClick={() => console.log(v.name)}\n                />\n            ))}\n        </Section>\n    );\n}\n\nfunction Songs({state, dispatch}: SideNavProps): JSX.Element {\n    const [songs, setSongs] = useState(List<any>()); // Songs are stored in the component state\n\n    useEffect(() => {\n        const songsList: List<any> = state.get('songs', List());\n        if (songsList.size > 0) {\n            setSongs(songsList); // Adds the songs from the application state\n        }\n    }, [state]);\n\n    // This method is used within the filter component\n    const handleInputChange = (event: Event) => {\n        const inputElement = event.target as HTMLInputElement\n        const inputValue = inputElement.value ?? \"\";\n        const filteredSongs = inputValue ? songs.filter((song) => {\n            return song.get('songTitle').toUpperCase().startsWith(inputValue.toUpperCase());\n        }) : state.get('songs', List());\n        if (filteredSongs) {\n            setSongs(filteredSongs); // Filtered songs are set to this components state\n        }\n    }\n\n    return (\n        <Fragment>\n            <SongFilter onChangeHandler={handleInputChange}/>\n            <Section title=\"Playlist\">\n                {songs.map(song => (\n                    <div\n                        key={song.get('id')}\n                        className=\"f6 pointer underline flex items-center no-underline i dim\"\n                        onClick={() =>\n                            dispatch(new DispatchAction('PLAY_SONG', {id: song.get('id')}))\n                        }\n                    >\n                        <Music20 className=\"mr1\"/>\n                        {song.get('songTitle')}\n                    </div>\n                ))}\n            </Section>\n        </Fragment>\n    );\n}\n\n/*\n* This component displays song filter\n* */\nfunction SongFilter(props: any): JSX.Element {\n    const onChangeHandler = props.onChangeHandler;\n    return (\n        <div className=\"pa2 b--light-gray mb1 mr3\">\n            <h4 className=\"fw7 mb2\">Search songs</h4>\n            <input type=\"text\" maxLength={50} onChange={onChangeHandler}/>\n        </div>\n    )\n}\n\n/*\n* This component displays details of the currently playing song\n* */\nfunction SongDetails({state}: SideNavProps): JSX.Element {\n    let song = state.get('playingSong', fromJS({})).toJSON();\n    return (\n        <Fragment>\n            {song.songTitle && <div className=\"songDetails overflow-scroll\">\n                <h3 className=\"fw7 mb2\">{song.songTitle}</h3>\n                <div className=\"songDetails__element\">\n                    <span><b>Artist :</b></span>\n                    <span className=\"songDetails__element-detail\">{song.artist ?? 'Not Available'}</span>\n                </div>\n                <div className=\"songDetails__element\">\n                    <span><b>Album : </b></span>\n                    <span className=\"songDetails__element-detail\">{song.album ?? 'Not Available'}</span>\n                </div>\n                <div className=\"songDetails__element\">\n                    <span><b>Genre : </b></span>\n                    <span className=\"songDetails__element-detail\">{song.genre ?? 'Not Available'}</span>\n                </div>\n            </div>}\n        </Fragment>\n\n    );\n}\n\nexport function SideNav({state, dispatch}: SideNavProps): JSX.Element {\n\n    return (\n        <div className=\"absolute top-0 left-0 bottom-0 w5 z-1 shadow-1 bg-white flex flex-column\">\n            <div className=\"h3 fw7 f5 flex items-center pl3 bb b--light-gray\">\n                Temp Instrument\n            </div>\n            <div className=\"flex-auto\">\n                <Instruments state={state} dispatch={dispatch}/>\n                <Visualizers state={state} dispatch={dispatch}/>\n                <Songs state={state} dispatch={dispatch}/>\n                <SongDetails state={state} dispatch={dispatch}/> {/* This renders the song details component */}\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}