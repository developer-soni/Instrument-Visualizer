{"ast":null,"code":"var _jsxFileName = \"/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/instruments/developer-soni.tsx\",\n    _s = $RefreshSig$();\n\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React, { useEffect } from 'react'; // project imports\n\nimport { Instrument } from '../Instruments';\nimport image from './../img/flute.png';\n/** ------------------------------------------------------------------------ **\r\n * Contains implementation of components for Flute.\r\n ** ------------------------------------------------------------------------ */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FluteKey({\n  note,\n  synth,\n  minor,\n  index\n}) {\n  /**\r\n   * This React component corresponds to either a major or minor key in the Flute.\r\n   */\n  return (\n    /*#__PURE__*/\n    // Observations:\n    // 1. The JSX refers to the HTML-looking syntax within TypeScript.\n    // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\n    // 3. The curly braces `{` and `}` should remind you of string interpolation.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttack(`${note}`) // Question: what is `onMouseDown`?\n      ,\n      onMouseUp: () => synth === null || synth === void 0 ? void 0 : synth.triggerRelease('+0.25') // Question: what is `onMouseUp`?\n      ,\n      className: classNames('ba pointer absolute dim', {\n        'bg-black black h3': minor,\n        // minor keys are black\n        'black bg-white h4': !minor // major keys are white\n\n      }),\n      style: {\n        // CSS\n        top: 0,\n        left: `${index * 2}rem`,\n        zIndex: minor ? 1 : 0,\n        width: minor ? '1.5rem' : '2rem',\n        marginLeft: minor ? '0.25rem' : 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = FluteKey;\n\nfunction Flute({\n  synth,\n  setSynth\n}) {\n  _s();\n\n  const keys = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]); // Tone created with : https://tonejs.github.io/examples/simpleSynth\n\n  const setOscillator = () => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        \"volume\": 7,\n        \"detune\": 0,\n        \"portamento\": 0,\n        \"envelope\": {\n          \"attack\": 1,\n          \"attackCurve\": \"cosine\",\n          \"decay\": 2,\n          \"decayCurve\": \"linear\",\n          \"release\": 1,\n          \"releaseCurve\": \"exponential\",\n          \"sustain\": 0\n        },\n        \"oscillator\": {\n          \"partialCount\": 3,\n          \"partials\": [0.000048225308641975394, 0.007236810378086416, 1],\n          \"phase\": 3,\n          \"type\": \"fatcustom\",\n          \"count\": 5,\n          \"spread\": 1\n        }\n      }).toDestination();\n    });\n  };\n\n  useEffect(setOscillator, [setSynth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Flute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 ml4\",\n      children: Range(2, 7).map(octave => keys.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(FluteKey, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Flute, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = Flute;\nexport const FluteInstrument = new Instrument('Flute (developer-soni)', Flute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FluteKey\");\n$RefreshReg$(_c2, \"Flute\");","map":{"version":3,"sources":["/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/instruments/developer-soni.tsx"],"names":["Tone","classNames","List","Range","React","useEffect","Instrument","image","FluteKey","note","synth","minor","index","triggerAttack","triggerRelease","top","left","zIndex","width","marginLeft","Flute","setSynth","keys","idx","setOscillator","oldSynth","disconnect","Synth","toDestination","map","octave","key","isMinor","indexOf","FluteInstrument"],"mappings":"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","sourcesContent":["// 3rd party library imports\r\nimport * as Tone from 'tone';\r\nimport classNames from 'classnames';\r\nimport { List, Range } from 'immutable';\r\nimport React, { useEffect } from 'react';\r\n\r\n// project imports\r\nimport { Instrument, InstrumentProps } from '../Instruments';\r\nimport { OmniOscillatorOptions } from \"tone/Tone/source/oscillator/OscillatorInterface\";\r\nimport { RecursivePartial } from \"tone/Tone/core/util/Interface\";\r\nimport image from './../img/flute.png';\r\n\r\n/** ------------------------------------------------------------------------ **\r\n * Contains implementation of components for Flute.\r\n ** ------------------------------------------------------------------------ */\r\n\r\ninterface FluteKeyProps {\r\n    note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\r\n    duration?: string;\r\n    synth?: Tone.Synth; // Contains library code for making sound\r\n    minor?: boolean; // True if minor key, false if major key\r\n    octave: number;\r\n    index: number; // octave + index together give a location for the Flute key\r\n}\r\n\r\nexport function FluteKey({\r\n    note,\r\n    synth,\r\n    minor,\r\n    index,\r\n}: FluteKeyProps): JSX.Element {\r\n    /**\r\n     * This React component corresponds to either a major or minor key in the Flute.\r\n     */\r\n    return (\r\n        // Observations:\r\n        // 1. The JSX refers to the HTML-looking syntax within TypeScript.\r\n        // 2. The JSX will be **transpiled** into the corresponding `React.createElement` library call.\r\n        // 3. The curly braces `{` and `}` should remind you of string interpolation.\r\n        <div\r\n            onMouseDown={() => synth?.triggerAttack(`${note}`)} // Question: what is `onMouseDown`?\r\n            onMouseUp={() => synth?.triggerRelease('+0.25')} // Question: what is `onMouseUp`?\r\n            className={classNames('ba pointer absolute dim', {\r\n                'bg-black black h3': minor, // minor keys are black\r\n                'black bg-white h4': !minor, // major keys are white\r\n            })}\r\n            style={{\r\n                // CSS\r\n                top: 0,\r\n                left: `${index * 2}rem`,\r\n                zIndex: minor ? 1 : 0,\r\n                width: minor ? '1.5rem' : '2rem',\r\n                marginLeft: minor ? '0.25rem' : 0,\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nfunction Flute({ synth, setSynth }: InstrumentProps): JSX.Element {\r\n    const keys = List([\r\n        { note: 'C', idx: 0 },\r\n        { note: 'Db', idx: 0.5 },\r\n        { note: 'D', idx: 1 },\r\n        { note: 'Eb', idx: 1.5 },\r\n        { note: 'E', idx: 2 },\r\n        { note: 'F', idx: 3 },\r\n        { note: 'Gb', idx: 3.5 },\r\n        { note: 'G', idx: 4 },\r\n        { note: 'Ab', idx: 4.5 },\r\n        { note: 'A', idx: 5 },\r\n        { note: 'Bb', idx: 5.5 },\r\n        { note: 'B', idx: 6 },\r\n    ]);\r\n\r\n    // Tone created with : https://tonejs.github.io/examples/simpleSynth\r\n    const setOscillator = () => {\r\n        setSynth(oldSynth => {\r\n            oldSynth.disconnect();\r\n            return new Tone.Synth({\r\n                \"volume\": 7,\r\n                \"detune\": 0,\r\n                \"portamento\": 0,\r\n                \"envelope\": {\r\n                    \"attack\": 1,\r\n                    \"attackCurve\": \"cosine\",\r\n                    \"decay\": 2,\r\n                    \"decayCurve\": \"linear\",\r\n                    \"release\": 1,\r\n                    \"releaseCurve\": \"exponential\",\r\n                    \"sustain\": 0\r\n                },\r\n                \"oscillator\": {\r\n                    \"partialCount\": 3,\r\n                    \"partials\": [\r\n                        0.000048225308641975394,\r\n                        0.007236810378086416,\r\n                        1\r\n                    ],\r\n                    \"phase\": 3,\r\n                    \"type\": \"fatcustom\",\r\n                    \"count\": 5,\r\n                    \"spread\": 1\r\n                } as RecursivePartial<OmniOscillatorOptions>,\r\n            }).toDestination();\r\n        }\r\n        )\r\n            ;\r\n    };\r\n\r\n    useEffect(setOscillator, [setSynth]);\r\n\r\n    return (\r\n        <div className=\"pv4\">\r\n            <div className={\"image\"}>\r\n                <img src={image} alt={\"Flute\"} />\r\n            </div>\r\n            <div className=\"relative dib h4 w-100 ml4\">\r\n                {Range(2, 7).map(octave =>\r\n                    keys.map(key => {\r\n                        const isMinor = key.note.indexOf('b') !== -1;\r\n                        const note = `${key.note}${octave}`;\r\n                        return (\r\n                            <FluteKey\r\n                                key={note} //react key\r\n                                note={note}\r\n                                synth={synth}\r\n                                minor={isMinor}\r\n                                octave={octave}\r\n                                index={(octave - 2) * 7 + key.idx}\r\n                            />\r\n                        );\r\n                    }),\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const FluteInstrument = new Instrument('Flute (developer-soni)', Flute);\r\n"]},"metadata":{},"sourceType":"module"}