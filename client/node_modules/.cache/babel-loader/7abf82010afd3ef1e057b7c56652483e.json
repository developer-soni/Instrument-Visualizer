{"ast":null,"code":"import _slicedToArray from\"/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";// 3rd party library imports\nimport React,{useState,useEffect}from'react';import*as Tone from'tone';// project imports\nimport{DispatchAction}from'./Reducer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Instrument=function Instrument(name,component){_classCallCheck(this,Instrument);this.name=void 0;this.component=void 0;this.name=name;this.component=component;};function TopNav(_ref){var name=_ref.name;return/*#__PURE__*/_jsx(\"div\",{className:'w-100 h3 bb b--light-gray flex justify-between items-center ph4',children:/*#__PURE__*/_jsx(\"div\",{children:name})});}export var InstrumentContainer=function InstrumentContainer(_ref2){var instrument=_ref2.instrument,state=_ref2.state,dispatch=_ref2.dispatch;var InstrumentComponent=instrument.component;var _useState=useState(new Tone.Synth({oscillator:{type:'sine'}}).toDestination()),_useState2=_slicedToArray(_useState,2),synth=_useState2[0],setSynth=_useState2[1];var notes=state.get('notes');useEffect(function(){if(notes&&synth){var eachNote=notes.split(' ');var noteObjs=eachNote.map(function(note,idx){return{idx:idx,time:\"+\".concat(idx/4),note:note,velocity:1};});new Tone.Part(function(time,value){// the value is an object which contains both the note and the velocity\nsynth.triggerAttackRelease(value.note,'4n',time,value.velocity);if(value.idx===eachNote.length-1){dispatch(new DispatchAction('STOP_SONG'));}},noteObjs).start(0);Tone.Transport.start();return function(){Tone.Transport.cancel();};}return function(){};},[notes,synth,dispatch]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TopNav,{name:instrument.name}),/*#__PURE__*/_jsx(\"div\",{className:'bg-white absolute right-0 left-0',style:{top:'4rem'},children:/*#__PURE__*/_jsx(InstrumentComponent,{name:instrument.name,state:state,dispatch:dispatch,synth:synth,setSynth:setSynth})})]});};","map":{"version":3,"sources":["/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/Instruments.tsx"],"names":["React","useState","useEffect","Tone","DispatchAction","Instrument","name","component","TopNav","InstrumentContainer","instrument","state","dispatch","InstrumentComponent","Synth","oscillator","type","toDestination","synth","setSynth","notes","get","eachNote","split","noteObjs","map","note","idx","time","velocity","Part","value","triggerAttackRelease","length","start","Transport","cancel","top"],"mappings":"8RAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,MAAtB,CAEA;AACA,OAASC,cAAT,KAA+B,WAA/B,C,wFAeA,UAAaC,CAAAA,UAAb,CAIE,oBAAYC,IAAZ,CAA0BC,SAA1B,CAAgE,uCAHhDD,IAGgD,aAFhDC,SAEgD,QAC9D,KAAKD,IAAL,CAAYA,IAAZ,CACA,KAAKC,SAAL,CAAiBA,SAAjB,CACD,CAPH,CAUA,QAASC,CAAAA,MAAT,MAA4C,IAA1BF,CAAAA,IAA0B,MAA1BA,IAA0B,CAC1C,mBACE,YACE,SAAS,CACP,iEAFJ,uBAKE,qBAAMA,IAAN,EALF,EADF,CASD,CAQD,MAAO,IAAMG,CAAAA,mBAAuD,CAAG,QAA1DA,CAAAA,mBAA0D,OAIvC,IAH9BC,CAAAA,UAG8B,OAH9BA,UAG8B,CAF9BC,KAE8B,OAF9BA,KAE8B,CAD9BC,QAC8B,OAD9BA,QAC8B,CAC9B,GAAMC,CAAAA,mBAAmB,CAAGH,UAAU,CAACH,SAAvC,CACA,cAA0BN,QAAQ,CAChC,GAAIE,CAAAA,IAAI,CAACW,KAAT,CAAe,CACbC,UAAU,CAAE,CAAEC,IAAI,CAAE,MAAR,CADC,CAAf,EAEGC,aAFH,EADgC,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eAMA,GAAMC,CAAAA,KAAK,CAAGT,KAAK,CAACU,GAAN,CAAU,OAAV,CAAd,CAEAnB,SAAS,CAAC,UAAM,CACd,GAAIkB,KAAK,EAAIF,KAAb,CAAoB,CAClB,GAAII,CAAAA,QAAQ,CAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAf,CACA,GAAIC,CAAAA,QAAQ,CAAGF,QAAQ,CAACG,GAAT,CAAa,SAACC,IAAD,CAAeC,GAAf,QAAgC,CAC1DA,GAAG,CAAHA,GAD0D,CAE1DC,IAAI,YAAMD,GAAG,CAAG,CAAZ,CAFsD,CAG1DD,IAAI,CAAJA,IAH0D,CAI1DG,QAAQ,CAAE,CAJgD,CAAhC,EAAb,CAAf,CAOA,GAAI1B,CAAAA,IAAI,CAAC2B,IAAT,CAAc,SAACF,IAAD,CAAOG,KAAP,CAAiB,CAC7B;AACAb,KAAK,CAACc,oBAAN,CAA2BD,KAAK,CAACL,IAAjC,CAAuC,IAAvC,CAA6CE,IAA7C,CAAmDG,KAAK,CAACF,QAAzD,EACA,GAAIE,KAAK,CAACJ,GAAN,GAAcL,QAAQ,CAACW,MAAT,CAAkB,CAApC,CAAuC,CACrCrB,QAAQ,CAAC,GAAIR,CAAAA,cAAJ,CAAmB,WAAnB,CAAD,CAAR,CACD,CACF,CAND,CAMGoB,QANH,EAMaU,KANb,CAMmB,CANnB,EAQA/B,IAAI,CAACgC,SAAL,CAAeD,KAAf,GAEA,MAAO,WAAM,CACX/B,IAAI,CAACgC,SAAL,CAAeC,MAAf,GACD,CAFD,CAGD,CAED,MAAO,WAAM,CAAE,CAAf,CACD,CA1BQ,CA0BN,CAAChB,KAAD,CAAQF,KAAR,CAAeN,QAAf,CA1BM,CAAT,CA4BA,mBACE,oCACE,KAAC,MAAD,EAAQ,IAAI,CAAEF,UAAU,CAACJ,IAAzB,EADF,cAEE,YACE,SAAS,CAAE,kCADb,CAEE,KAAK,CAAE,CAAE+B,GAAG,CAAE,MAAP,CAFT,uBAIE,KAAC,mBAAD,EACE,IAAI,CAAE3B,UAAU,CAACJ,IADnB,CAEE,KAAK,CAAEK,KAFT,CAGE,QAAQ,CAAEC,QAHZ,CAIE,KAAK,CAAEM,KAJT,CAKE,QAAQ,CAAEC,QALZ,EAJF,EAFF,GADF,CAiBD,CA3DM","sourcesContent":["// 3rd party library imports\nimport React, { useState, useEffect } from 'react';\nimport * as Tone from 'tone';\n\n// project imports\nimport { DispatchAction } from './Reducer';\nimport { AppState } from './State';\n\n/** ------------------------------------------------------------------------ **\n * Contains implementation of an Instruments.\n ** ------------------------------------------------------------------------ */\n\nexport interface InstrumentProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  name: string;\n  synth: Tone.Synth;\n  setSynth: (f: (oldSynth: Tone.Synth) => Tone.Synth) => void;\n}\n\nexport class Instrument {\n  public readonly name: string;\n  public readonly component: React.FC<InstrumentProps>;\n\n  constructor(name: string, component: React.FC<InstrumentProps>) {\n    this.name = name;\n    this.component = component;\n  }\n}\n\nfunction TopNav({ name }: { name: string }) {\n  return (\n    <div\n      className={\n        'w-100 h3 bb b--light-gray flex justify-between items-center ph4'\n      }\n    >\n      <div>{name}</div>\n    </div>\n  );\n}\n\ninterface InstrumentContainerProps {\n  state: AppState;\n  dispatch: React.Dispatch<DispatchAction>;\n  instrument: Instrument;\n}\n\nexport const InstrumentContainer: React.FC<InstrumentContainerProps> = ({\n  instrument,\n  state,\n  dispatch,\n}: InstrumentContainerProps) => {\n  const InstrumentComponent = instrument.component;\n  const [synth, setSynth] = useState(\n    new Tone.Synth({\n      oscillator: { type: 'sine' } as Tone.OmniOscillatorOptions,\n    }).toDestination(),\n  );\n\n  const notes = state.get('notes');\n\n  useEffect(() => {\n    if (notes && synth) {\n      let eachNote = notes.split(' ');\n      let noteObjs = eachNote.map((note: string, idx: number) => ({\n        idx,\n        time: `+${idx / 4}`,\n        note,\n        velocity: 1,\n      }));\n\n      new Tone.Part((time, value) => {\n        // the value is an object which contains both the note and the velocity\n        synth.triggerAttackRelease(value.note, '4n', time, value.velocity);\n        if (value.idx === eachNote.length - 1) {\n          dispatch(new DispatchAction('STOP_SONG'));\n        }\n      }, noteObjs).start(0);\n\n      Tone.Transport.start();\n\n      return () => {\n        Tone.Transport.cancel();\n      };\n    }\n\n    return () => {};\n  }, [notes, synth, dispatch]);\n\n  return (\n    <div>\n      <TopNav name={instrument.name} />\n      <div\n        className={'bg-white absolute right-0 left-0'}\n        style={{ top: '4rem' }}\n      >\n        <InstrumentComponent\n          name={instrument.name}\n          state={state}\n          dispatch={dispatch}\n          synth={synth}\n          setSynth={setSynth}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}