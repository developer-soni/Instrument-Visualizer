{"ast":null,"code":"// 3rd party library imports\n// project imports\nimport{Visualizer}from'../Visualizers';export var RGBCirclesVisualizer=new Visualizer('RGBCircles (developer-soni)',function(p5,analyzer){var width=150;var height=150;var strokeColors=['#fff700','#4000ff','#00ff08','#ff0000'];var color=strokeColors[Math.floor(Math.random()*(strokeColors.length+1))];p5.background('#383737');p5.stroke(String(color));var values=analyzer.getValue();p5.beginShape();for(var i=0;i<Math.min(values.length,255);i++){var amplitude=values[i];var x=p5.map(i,0,values.length-1,0,width/2);// const y = height / 2 + amplitude * height;\nvar y=p5.map(i,0,values.length-1,0,height/2);var xAngle=p5.map(i,0,x,-4*Math.PI,4*Math.PI);var yAngle=p5.map(i,0,y,-4*Math.PI,4*Math.PI);var angle=xAngle*(x/width)+yAngle*(y/height);for(var j=0;j<10;j++){var myX=width*-4-width/2*p5.cos(2*Math.PI*amplitude+angle);var myY=height*-0.5-height/2*p5.sin(2*Math.PI*-1*amplitude+angle);p5.circle(myX+j*115,myY,5);// draw particle\np5.circle(myX+j*115,myY+1*150,5);// draw particle\n}}p5.endShape();});","map":{"version":3,"sources":["/Users/devsoni/Desktop/Instrument-Visualizer-Project/client/src/visualizers/developer-soni.tsx"],"names":["Visualizer","RGBCirclesVisualizer","p5","analyzer","width","height","strokeColors","color","Math","floor","random","length","background","stroke","String","values","getValue","beginShape","i","min","amplitude","x","map","y","xAngle","PI","yAngle","angle","j","myX","cos","myY","sin","circle","endShape"],"mappings":"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","sourcesContent":["// 3rd party library imports\r\nimport P5 from 'p5';\r\nimport * as Tone from 'tone';\r\n\r\n// project imports\r\nimport {Visualizer} from '../Visualizers';\r\n\r\nexport const RGBCirclesVisualizer = new Visualizer(\r\n    'RGBCircles (developer-soni)',\r\n    (p5: P5, analyzer: Tone.Analyser) => {\r\n        const width = 150;\r\n        const height = 150;\r\n        const strokeColors = ['#fff700', '#4000ff', '#00ff08', '#ff0000']\r\n        const color = strokeColors[Math.floor(Math.random() * (strokeColors.length + 1))];\r\n\r\n        p5.background('#383737');\r\n        p5.stroke(String(color));\r\n        const values = analyzer.getValue();\r\n        p5.beginShape();\r\n\r\n        for (let i = 0; i < Math.min(values.length, 255); i++) {\r\n            const amplitude = values[i] as number;\r\n            const x = p5.map(i, 0, values.length - 1, 0, width / 2);\r\n            // const y = height / 2 + amplitude * height;\r\n            const y = p5.map(i, 0, values.length - 1, 0, height / 2);\r\n            const xAngle = p5.map(i, 0, x, -4 * Math.PI, 4 * Math.PI,);\r\n            const yAngle = p5.map(i, 0, y, -4 * Math.PI, 4 * Math.PI,);\r\n            const angle = xAngle * (x / width) + yAngle * (y / height);\r\n\r\n            for (let j = 0; j < 10; j++) {\r\n                const myX = (width*-4) - width / 2 * p5.cos(2 * Math.PI * amplitude + angle);\r\n                const myY = (height*-0.5) - height / 2 * p5.sin(2 * Math.PI * -1 * amplitude + angle);\r\n                p5.circle(myX + j * 115, myY, 5); // draw particle\r\n                p5.circle(myX + j * 115, myY + 1 * 150, 5); // draw particle\r\n            }\r\n        }\r\n\r\n        p5.endShape();\r\n    },\r\n);"]},"metadata":{},"sourceType":"module"}